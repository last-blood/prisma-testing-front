@import "tailwindcss";
@plugin "daisyui";

/* Editor */
.ProseMirror {
  min-height: 150px;
  padding: 1rem;
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  transition: border-color 0.2s;
}

.ProseMirror:focus {
  outline: none;
  border-color: var(--primary-accent);
}

/* Headings */
.ProseMirror h1 {
  font-size: 2.25rem;
  font-weight: 700;
  margin: 0.5em 0;
}
.ProseMirror h2 {
  font-size: 1.875rem;
  font-weight: 700;
  margin: 0.5em 0;
}
.ProseMirror h3 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0.5em 0;
}
.ProseMirror h4 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0.5em 0;
}
.ProseMirror h5 {
  font-size: 1rem;
  font-weight: 600;
  margin: 0.5em 0;
}
.ProseMirror h6 {
  font-size: 0.875rem;
  font-weight: 600;
  margin: 0.5em 0;
}

/* Paragraphs */
.ProseMirror p {
  margin: 0.5em 0;
  line-height: 1.75;
}

/* Lists */
.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5rem;
  margin: 1em 0;
}
.ProseMirror li {
  margin-bottom: 0.5em;
}
/* Add these rules */
.ProseMirror ul {
  /* list-style-type: disc;  Use 'disc' for solid bullets */
  list-style: disc;
}

.ProseMirror ol {
  /* list-style-type: decimal; Use 'decimal' for numbers */
  list-style: decimal;
}
/* ðŸ›  TASK LIST FIX ðŸ›  */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding-left: 1.5rem;
  margin: 1em 0;
}
.ProseMirror li[data-type="taskItem"] {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0.5em 0;
}
.ProseMirror li[data-type="taskItem"] > label {
  display: flex;
  align-items: center;
}
.ProseMirror li[data-type="taskItem"] input[type="checkbox"] {
  cursor: pointer;
  width: 1.25rem;
  height: 1.25rem;
}
.ProseMirror li[data-type="taskItem"] > div {
  flex-grow: 1;
}
.ProseMirror li[data-type="taskItem"] p {
  margin: 0;
}
.ProseMirror li[data-type="taskItem"][data-checked="true"] p {
  text-decoration: line-through;
  color: var(--muted-foreground);
}

/* Tables */
.ProseMirror table {
  border-collapse: collapse;
  margin: 1em 0;
  width: 100%;
  table-layout: fixed;
}
.ProseMirror td,
.ProseMirror th {
  border: 1px solid var(--border-color);
  padding: 0.5rem;
  text-align: left;
}
.ProseMirror th {
  background-color: var(--header-bg);
  font-weight: bold;
}

/* Quotes */
.ProseMirror blockquote {
  border-left: 3px solid var(--border-color);
  padding-left: 1rem;
  margin: 1em 0;
  color: var(--muted-foreground);
  font-style: italic;
}

/* Links */
.ProseMirror a {
  color: var(--primary-accent);
  text-decoration: underline;
}

/* Menu Bar */
.menu-bar {
  background: var(--card-background);
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  align-items: center;
}

.menu-bar .color-picker input[type="color"] {
  width: 1.5rem;
  height: 1.5rem;
  border: none;
  cursor: pointer;
}

.ProseMirror img {
  max-width: 100%;
  height: auto;
  display: inline-block;
  vertical-align: middle;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: 0.5rem;
  object-fit: contain;
  max-height: 400px;
}

.ProseMirror .column-block {
  width: 100%;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  gap: 24px;
  padding: 8px 0;
}

.ProseMirror .column {
  overflow: auto;
  border: 1px dashed gray;
  border-radius: 8px;
  padding: 8px;
  margin: -8px;
}

/* Add this CSS to target code blocks */
.prose code {
  background-color: black; /* The desired background color */
  padding: 0.25rem 0.5rem; /* Optional: adds padding for better readability */
  border-radius: 4px; /* Optional: adds rounded corners */
}

/* Fix autofill background and text color */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0px 1000px #27272a inset; /* bg-zinc-800 */
  -webkit-text-fill-color: white; /* text-zinc-200 */
  caret-color: white; /* Set the caret (cursor) color */
  transition: background-color 9999s ease-in-out 0s;
  color: white;
}
input {
  color: white;
}
